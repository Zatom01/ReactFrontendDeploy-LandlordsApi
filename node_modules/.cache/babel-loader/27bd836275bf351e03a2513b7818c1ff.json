{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nexport const fetchLandlords = () => {\n  //thunk requires a function to be returned\n  return dispatch => {\n    fetch(BASE_URL + '/users').then(resp => resp.json()).then(landlords => dispatch({\n      type: \"LOAD_LANDLORDS\",\n      landlords\n    }));\n  };\n};\nexport const fetchlandlordhouses = landlord_id => {\n  console.log(landlord_id);\n  return dispatch => {\n    fetch(BASE_URL + '/users/' + landlord_id + '/houses').then(resp => resp.json()).then(houses => dispatch({\n      type: \"LOAD_HOUSES\",\n      houses\n    }));\n  };\n};\n\nconst addLandlord = landlord => {\n  return {\n    type: \"ADD_LANDLORD\",\n    landlord\n  };\n};\n\nexport const createLandlord = landlordData => {\n  return dispatch => {\n    fetch('http://localhost:3001/users', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(landlordData)\n    }).then(resp => resp.json()).then(landlord => {\n      dispatch(addLandlord(landlord));\n    });\n  };\n};\n\nconst deleteLandlord = id => {\n  return {\n    type: \"DELETE_LANDLORD\",\n    id\n  };\n};\n\nexport const removeLandlord = id => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/users/${id}`, {\n      method: 'DELETE'\n    }).then(resp => dispatch(deleteLandlord(id)));\n  };\n};","map":{"version":3,"sources":["/Users/Yosemite/flatiron_ruby/project/final_project/landlords-app-frontend/src/actions/landlords.js"],"names":["BASE_URL","fetchLandlords","dispatch","fetch","then","resp","json","landlords","type","fetchlandlordhouses","landlord_id","console","log","houses","addLandlord","landlord","createLandlord","landlordData","method","headers","body","JSON","stringify","deleteLandlord","id","removeLandlord"],"mappings":"AACA,MAAMA,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC;AAEA,SAAQC,QAAD,IAAc;AAGjBC,IAAAA,KAAK,CAACH,QAAQ,GAAG,QAAZ,CAAL,CACKI,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,SAAS,IAAIL,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,gBAAR;AAA0BD,MAAAA;AAA1B,KAAD,CAF/B;AAIH,GAPD;AAQH,CAXM;AAaP,OAAO,MAAME,mBAAmB,GAAIC,WAAD,IAAiB;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,SAAQR,QAAD,IAAc;AAEjBC,IAAAA,KAAK,CAACH,QAAQ,GAAG,SAAX,GAAuBU,WAAvB,GAAqC,SAAtC,CAAL,CACKN,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUS,MAAM,IAAIX,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,aAAR;AAAuBK,MAAAA;AAAvB,KAAD,CAF5B;AAGH,GALD;AAMH,CARM;;AAUP,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9B,SAAO;AACHP,IAAAA,IAAI,EAAE,cADH;AAEHO,IAAAA;AAFG,GAAP;AAIH,CALD;;AASA,OAAO,MAAMC,cAAc,GAAIC,YAAD,IAAkB;AAC5C,SAAQf,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCe,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,YAAf;AAN2B,KAAhC,CAAL,CAQKb,IARL,CAQUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARlB,EASKF,IATL,CASUW,QAAQ,IAAI;AACdb,MAAAA,QAAQ,CAACY,WAAW,CAACC,QAAD,CAAZ,CAAR;AACH,KAXL;AAYH,GAbD;AAcH,CAfM;;AAkBP,MAAMQ,cAAc,GAAIC,EAAD,IAAQ;AAC3B,SAAO;AACHhB,IAAAA,IAAI,EAAE,iBADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,cAAc,GAAGD,EAAE,IAAI;AAChC,SAAQtB,QAAD,IAAc;AACjB,WAAOC,KAAK,CAAE,+BAA8BqB,EAAG,EAAnC,EAAsC;AAC9CN,MAAAA,MAAM,EAAE;AADsC,KAAtC,CAAL,CAGFd,IAHE,CAGGC,IAAI,IAAIH,QAAQ,CAACqB,cAAc,CAACC,EAAD,CAAf,CAHnB,CAAP;AAIH,GALD;AAMH,CAPM","sourcesContent":["\nconst BASE_URL = 'http://localhost:3001'\n\nexport const fetchLandlords = () => {\n    //thunk requires a function to be returned\n\n    return (dispatch) => {\n\n\n        fetch(BASE_URL + '/users')\n            .then(resp => resp.json())\n            .then(landlords => dispatch({ type: \"LOAD_LANDLORDS\", landlords }))\n\n    }\n}\n\nexport const fetchlandlordhouses = (landlord_id) => {\n    console.log(landlord_id)\n    return (dispatch) => {\n\n        fetch(BASE_URL + '/users/' + landlord_id + '/houses')\n            .then(resp => resp.json())\n            .then(houses => dispatch({ type: \"LOAD_HOUSES\", houses }))\n    }\n}\n\nconst addLandlord = (landlord) => {\n    return {\n        type: \"ADD_LANDLORD\",\n        landlord\n    }\n}\n\n\n\nexport const createLandlord = (landlordData) => {\n    return (dispatch) => {\n        fetch('http://localhost:3001/users', {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(landlordData)\n        })\n            .then(resp => resp.json())\n            .then(landlord => {\n                dispatch(addLandlord(landlord))\n            })\n    }\n}\n\n\nconst deleteLandlord = (id) => {\n    return {\n        type: \"DELETE_LANDLORD\",\n        id\n    }\n}\n\nexport const removeLandlord = id => {\n    return (dispatch) => {\n        return fetch(`http://localhost:3001/users/${id}`, {\n            method: 'DELETE',\n        })\n            .then(resp => dispatch(deleteLandlord(id)))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}