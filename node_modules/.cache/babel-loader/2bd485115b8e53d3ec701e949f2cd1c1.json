{"ast":null,"code":"const BASE_URL = 'http://localhost:3001';\nexport const fetchLandlords = () => {\n  //thunk requires a function to be returned\n  return dispatch => {\n    fetch(BASE_URL + '/users').then(resp => resp.json()).then(landlords => dispatch({\n      type: \"LOAD_LANDLORDS\",\n      landlords\n    }));\n  };\n};\nexport const fetchlandlordhouses = landlord_id => {\n  console.log(landlord_id);\n  return dispatch => {\n    fetch(BASE_URL + '/users/' + landlord_id + '/houses').then(resp => resp.json()).then(houses => dispatch({\n      type: \"LOAD_HOUSES\",\n      houses\n    }));\n  };\n};\n\nconst addLandlord = landlord => {\n  return {\n    type: \"ADD_LANDLORD\",\n    landlord\n  };\n};\n\nexport const createLandlord = landlordData => {\n  return dispatch => {\n    fetch('http://localhost:3001/users', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(landlordData)\n    }).then(resp => resp.json()).then(landlord => {\n      dispatch(addLandlord(landlord));\n    });\n  };\n};\n\nconst addLandlordHouse = house => {\n  return {\n    type: \"ADD_LANDLORD_HOUSE\",\n    house\n  };\n};\n\nexport const createLandlordHouse = (landlord_id, house) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/users/${landlord_id}/houses`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(house)\n    }).then(resp => resp.json()).then(house => {\n      dispatch(addLandlordHouse(house));\n    });\n  };\n};\n\nconst deleteLandlord = id => {\n  return {\n    type: \"DELETE_LANDLORD\",\n    id\n  };\n};\n\nexport const removeLandlord = id => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/users/${id}`, {\n      method: 'DELETE'\n    }).then(resp => dispatch(deleteLandlord(id)));\n  };\n};\n\nconst deleteLandlordHouse = id => {\n  return {\n    type: \"DELETE_LANDLORD_HOUSE\",\n    id\n  };\n};\n\nexport const removelandlordhouse = (landlordId, houseId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/users/${landlordId}/houses/${houseId}`, {\n      method: 'DELETE'\n    }).then(resp => dispatch(deleteLandlordHouse(houseId)));\n  };\n};\n\nconst houseUpdate = house => {\n  return {\n    type: \"UPDATE_LANDLORD_HOUSE\",\n    house\n  };\n};\n\nexport const updateLandlordHouse = (landlordId, houseId, house) => {\n  return dispatch => {\n    fetch(`http://localhost:3001/users/${landlordId}/houses/${houseId}`, {\n      method: \"PATCH\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(house)\n    }).then(resp => resp.json()).then(house => {\n      dispatch(addLandlordHouse(house));\n    });\n  };\n};\nexport function reset_houses() {\n  return {\n    type: \"RESET_HOUSES\"\n  };\n}","map":{"version":3,"sources":["/Users/Yosemite/flatiron_ruby/project/final_project/landlords-app-frontend/src/actions/landlords.js"],"names":["BASE_URL","fetchLandlords","dispatch","fetch","then","resp","json","landlords","type","fetchlandlordhouses","landlord_id","console","log","houses","addLandlord","landlord","createLandlord","landlordData","method","headers","body","JSON","stringify","addLandlordHouse","house","createLandlordHouse","deleteLandlord","id","removeLandlord","deleteLandlordHouse","removelandlordhouse","landlordId","houseId","houseUpdate","updateLandlordHouse","reset_houses"],"mappings":"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","sourcesContent":["\nconst BASE_URL = 'http://localhost:3001'\n\nexport const fetchLandlords = () => {\n    //thunk requires a function to be returned\n\n    return (dispatch) => {\n\n        fetch(BASE_URL + '/users')\n            .then(resp => resp.json())\n            .then(landlords => dispatch({ type: \"LOAD_LANDLORDS\", landlords }))\n    }\n}\n\nexport const fetchlandlordhouses = (landlord_id) => {\n    console.log(landlord_id)\n    return (dispatch) => {\n\n        fetch(BASE_URL + '/users/' + landlord_id + '/houses')\n            .then(resp => resp.json())\n            .then(houses => dispatch({ type: \"LOAD_HOUSES\", houses }))\n    }\n}\n\nconst addLandlord = (landlord) => {\n    return {\n        type: \"ADD_LANDLORD\",\n        landlord\n    }\n}\n\n\n\nexport const createLandlord = (landlordData) => {\n    return (dispatch) => {\n        fetch('http://localhost:3001/users', {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(landlordData)\n        })\n            .then(resp => resp.json())\n            .then(landlord => {\n                dispatch(addLandlord(landlord))\n            })\n    }\n}\n\nconst addLandlordHouse = house => {\n    return {\n        type: \"ADD_LANDLORD_HOUSE\",\n        house\n    }\n}\n\nexport const createLandlordHouse = (landlord_id, house) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3001/users/${landlord_id}/houses`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(house)\n        })\n            .then(resp => resp.json())\n            .then(house => {\n                dispatch(addLandlordHouse(house))\n            })\n    }\n\n}\n\n\nconst deleteLandlord = (id) => {\n    return {\n        type: \"DELETE_LANDLORD\",\n        id\n    }\n}\n\nexport const removeLandlord = id => {\n    return (dispatch) => {\n        return fetch(`http://localhost:3001/users/${id}`, {\n            method: 'DELETE',\n        })\n            .then(resp => dispatch(deleteLandlord(id)))\n    }\n}\n\nconst deleteLandlordHouse = id => {\n    return {\n        type: \"DELETE_LANDLORD_HOUSE\",\n        id\n    }\n}\n\nexport const removelandlordhouse = (landlordId, houseId) => {\n    return (dispatch) => {\n        return fetch(`http://localhost:3001/users/${landlordId}/houses/${houseId}`, {\n            method: 'DELETE',\n        })\n            .then(resp => dispatch(deleteLandlordHouse(houseId)))\n    }\n}\n\nconst houseUpdate = (house) => {\n    return {\n        type: \"UPDATE_LANDLORD_HOUSE\",\n        house\n    }\n\n}\n\nexport const updateLandlordHouse = (landlordId, houseId, house) => {\n    return (dispatch) => {\n        fetch(`http://localhost:3001/users/${landlordId}/houses/${houseId}`, {\n            method: \"PATCH\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(house)\n\n        })\n            .then(resp => resp.json())\n            .then(house => {\n                dispatch(addLandlordHouse(house))\n            })\n    }\n}\n\n\nexport function reset_houses() {\n    return {\n        type: \"RESET_HOUSES\"\n    }\n}\n"]},"metadata":{},"sourceType":"module"}