{"ast":null,"code":"const LOADING = {\n  type: \"LOADING\"\n};\nconst BASE_URL = 'http://localhost:3001';\nexport const fetchLandlords = () => {\n  //thunk requires a function to be returned\n  return dispatch => {\n    dispatch(LOADING);\n    fetch(BASE_URL + '/users').then(resp => resp.json()).then(landlords => dispatch({\n      type: \"LOAD_LANDLORDS\",\n      landlords\n    }));\n  };\n};\n\nconst addLandlord = landlord => {\n  return {\n    type: \"ADD_LANDLORD\",\n    landlord\n  };\n};\n\nexport const createLandlord = landlordData => {\n  return dispatch => {\n    fetch('http://localhost:3001/users', {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(landlordData)\n    }).then(resp => resp.json()).then(landlord => {\n      dispatch(addLandlord(landlord));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Yosemite/flatiron_ruby/project/final_project/landlords-app-frontend/src/actions/landlords.js"],"names":["LOADING","type","BASE_URL","fetchLandlords","dispatch","fetch","then","resp","json","landlords","addLandlord","landlord","createLandlord","landlordData","method","headers","body","JSON","stringify"],"mappings":"AAAA,MAAMA,OAAO,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAhB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC;AAEA,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACJ,OAAD,CAAR;AAEAK,IAAAA,KAAK,CAACH,QAAQ,GAAG,QAAZ,CAAL,CACKI,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,SAAS,IAAIL,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,gBAAR;AAA0BQ,MAAAA;AAA1B,KAAD,CAF/B;AAIH,GAPD;AAQH,CAXM;;AAaP,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9B,SAAO;AACHV,IAAAA,IAAI,EAAE,cADH;AAEHU,IAAAA;AAFG,GAAP;AAIH,CALD;;AAQA,OAAO,MAAMC,cAAc,GAAIC,YAAD,IAAkB;AAC5C,SAAQT,QAAD,IAAc;AACjBC,IAAAA,KAAK,CAAC,6BAAD,EACD;AACIS,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFb;AAMIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,YAAf;AANV,KADC,CAAL,CASKP,IATL,CASUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATlB,EAUKF,IAVL,CAUUK,QAAQ,IAAI;AACdP,MAAAA,QAAQ,CAACM,WAAW,CAACC,QAAD,CAAZ,CAAR;AACH,KAZL;AAaH,GAdD;AAeH,CAhBM","sourcesContent":["const LOADING = { type: \"LOADING\" };\nconst BASE_URL = 'http://localhost:3001'\n\nexport const fetchLandlords = () => {\n    //thunk requires a function to be returned\n\n    return (dispatch) => {\n        dispatch(LOADING)\n\n        fetch(BASE_URL + '/users')\n            .then(resp => resp.json())\n            .then(landlords => dispatch({ type: \"LOAD_LANDLORDS\", landlords }))\n\n    }\n}\n\nconst addLandlord = (landlord) => {\n    return {\n        type: \"ADD_LANDLORD\",\n        landlord\n    }\n}\n\n\nexport const createLandlord = (landlordData) => {\n    return (dispatch) => {\n        fetch('http://localhost:3001/users',\n            {\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(landlordData)\n            })\n            .then(resp => resp.json())\n            .then(landlord => {\n                dispatch(addLandlord(landlord))\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}